
buildscript {
	ext {
		springBootVersion = '2.1.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
		classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")
	}
}

apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	compile('org.springframework.boot:spring-boot-starter-actuator')

	runtime('org.springframework.boot:spring-boot-devtools')
	runtime group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
	// runtime group: 'com.h2database', name: 'h2', version: '1.4.197'

	
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
	compile group: 'io.springfox', name: 'springfox-core', version: '2.8.0'
	

	testCompile group: 'com.h2database', name: 'h2', version: '1.4.197'
	testCompile('org.springframework.boot:spring-boot-starter-test')

	// junit5ç”¨
	testCompile("org.junit.jupiter:junit-jupiter-api")
	testRuntime("org.junit.jupiter:junit-jupiter-engine")
	testRuntime("org.junit.vintage:junit-vintage-engine")
	testCompileOnly 'org.apiguardian:apiguardian-api'
//	testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.3.0-M1'

}

test {
	systemProperties 'property': 'value'
}

junitPlatform.enableStandardTestTask true


jacoco {
	toolVersion = '0.7.9'
	applyTo junitPlatformTest
}

junitPlatformTest {
	jacoco {
		destinationFile = file("${buildDir}/jacoco/test.exec")
	}
}



jacocoTestReport {
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/Main*'])
		})
	}
	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = false
	}
}

